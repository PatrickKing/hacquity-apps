
/ receiver_service_posting is required.
/ initiator_service_posting is optional, since connections are permitted without matches.
- initiator_service_posting = initiator_service_posting || nil
- other_user = receiver_service_posting.user


/ If it's you, no-op
- if current_user == other_user


/ If the users are connected:
- elsif Connection.connection_exists? current_user, other_user

  h3 Connection
  p = "You're connected with #{other_user.name}"
  = render 'users/contact_info', user: other_user



/ If there is an existing connection request, related to this one or not:
- elsif ConnectionRequest.current_connection_request current_user, other_user

  = render 'connection_requests/action_buttons', connection_request: ConnectionRequest.current_connection_request(current_user, other_user)


/ There is an old connection request which was accepted, but there is currently no connection. This means that the connection was removed at some point after being accepted. Offer a new connection button without summarizing the old request.
- elsif ConnectionRequest.old_connection_request(current_user, other_user)&.accepted?

  p = "You're not connected with #{other_user.name}."

  = form_with model: ConnectionRequest.new, url: ss_connection_requests_path do |form|
    = form.hidden_field :initiator_service_posting_id, value: initiator_service_posting&.id
    = form.hidden_field :receiver_service_posting_id, value: receiver_service_posting.id
    = form.submit "Send request", class: "mui-btn"

/ If there is one or more old request:
- elsif ConnectionRequest.old_connection_request current_user, other_user

  p = "You're not connected with #{other_user.name}."

  / Since the old connection is resolved, the request action buttons will only render a little summary of how the last connection request turned out.
  = render 'connection_requests/action_buttons', connection_request: ConnectionRequest.old_connection_request(current_user, other_user)

  = form_with model: ConnectionRequest.new, url: ss_connection_requests_path do |form|
    = form.hidden_field :initiator_service_posting_id, value: initiator_service_posting&.id
    = form.hidden_field :receiver_service_posting_id, value: receiver_service_posting.id
    = form.submit "Send request", class: "mui-btn"


/ If there is no connection or connection request:
- else

  = form_with model: ConnectionRequest.new, url: ss_connection_requests_path do |form|
    = form.hidden_field :initiator_service_posting_id, value: initiator_service_posting&.id
    = form.hidden_field :receiver_service_posting_id, value: receiver_service_posting.id
    = form.submit "Send request", class: "mui-btn"


